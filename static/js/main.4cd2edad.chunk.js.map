{"version":3,"sources":["Calendar.js","DateFunctions.js","InputFields.js","Transaction.js","Main.js","App.js","serviceWorker.js","index.js"],"names":["Calendar","props","state","month","getMonth","selectedDate","year","getYear","yearInput","toString","allDaysInMonth","date","startDate","startOfMonth","endDate","endOfMonth","eachDayOfInterval","start","end","getAllDaysInMonth","Date","this","FormControl","Select","value","onChange","event","setState","target","MenuItem","defaultValue","thousandSeparator","allowNegative","decimalScale","isAllowed","values","floatValue","onValueChange","className","height","width","itemSize","itemCount","length","index","style","onClick","changeSelectedDate","isSameDay","isSunday","isMonday","isTuesday","isWednesday","isThursday","isFriday","isSaturday","getDate","getBudgetAmountOnDate","getAddTransactionsOnDate","getSubTransactionsOnDate","React","Component","InputFields","showChangeBudget","showAddTransaction","currencyValue","isAdd","changeBudget","bind","addTransaction","closeAll","handleOutsideClick","e","node","contains","addTransactionOnSelectedDate","document","addEventListener","removeEventListener","ref","Button","marginRight","variant","marginLeft","prefix","placeholder","marginTop","color","Radio","checked","Transaction","onAdd","deleteSelected","enableDeleteConfirm","disableDeleteConfirm","deleteTransaction","add","deleteTransactionOnSelectedDate","increases","map","item","description","decreases","Main","addDate","dates","budget","now","amount","i","indexDate","isBefore","j","toFixed","dateEntry","newDate","dateIndex","newArray","val","getMonthName","Grid","container","justify","spacing","xs","App","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","console","message"],"mappings":"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","file":"static/js/main.4cd2edad.chunk.js","sourcesContent":["import React from 'react'\nimport { getAllDaysInMonth, getDayOfWeekName } from './DateFunctions'\nimport { FixedSizeList as List } from 'react-window'\nimport { getDate, getMonth, getYear, isSameDay } from 'date-fns'\nimport FormControl from '@material-ui/core/FormControl'\nimport Select from '@material-ui/core/Select'\nimport MenuItem from '@material-ui/core/MenuItem'\nimport NumberFormat from 'react-number-format'\n\nimport './Calendar.css'\n\nclass Calendar extends React.Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            month: getMonth(this.props.selectedDate),\n            year: getYear(this.props.selectedDate),\n            yearInput: getYear(this.props.selectedDate).toString()\n        }\n    }\n\n    render() {\n        let allDaysInMonth = getAllDaysInMonth(new Date(this.state.year, this.state.month, 1));\n\n        return (\n            <>\n                {/*\n                <ul>\n                    {this.props.dates.map((day, index) => {\n                        return <li key={index}>\n                            Date: {getDayOfWeekName(day.date)} - Budget: {this.props.getBudgetAmountOnDate(day.date)} - Additions:[{day.increases.map((inc) => {\n                                return <>\n                                    {inc.description}: {inc.value}&nbsp;\n                                </>;\n                            })}]\n                            - Subtractions[{day.decreases.map((dec) => {\n                                return <>\n                                    {dec.description}: {dec.value}&nbsp;\n                                </>\n                            })}]\n                        </li>\n                    })}\n                </ul>\n                */}\n                <FormControl>\n                    <Select value={this.state.month} onChange={(event) => this.setState({month: event.target.value})}>\n                        <MenuItem value={0}>Janurary</MenuItem>\n                        <MenuItem value={1}>Feburary</MenuItem>\n                        <MenuItem value={2}>March</MenuItem>\n                        <MenuItem value={3}>April</MenuItem>\n                        <MenuItem value={4}>May</MenuItem>\n                        <MenuItem value={5}>June</MenuItem>\n                        <MenuItem value={6}>July</MenuItem>\n                        <MenuItem value={7}>August</MenuItem>\n                        <MenuItem value={8}>September</MenuItem>\n                        <MenuItem value={9}>October</MenuItem>\n                        <MenuItem value={10}>November</MenuItem>\n                        <MenuItem value={11}>December</MenuItem>\n                    </Select>\n                </FormControl>\n                <NumberFormat\n                  defaultValue={this.state.year}\n                  thousandSeparator={false}\n                  allowNegative={false}\n                  decimalScale={0}\n                  isAllowed={(values => {return values.floatValue < 10000;})}\n                  onValueChange={(values) => {\n                      this.setState({\n                          year: values.floatValue > 0 ? values.floatValue : 0\n                        });}\n                    }\n                />\n                <div className=\"List\">\n                    <List\n                        height={500}\n                        width={500}\n                        itemSize={60}\n                        itemCount={allDaysInMonth.length}\n                    >\n                        {({ index, style }) => (\n                            <div style={style}\n                                onClick={() => this.props.changeSelectedDate(allDaysInMonth[index])}\n                                className={isSameDay(allDaysInMonth[index], this.props.selectedDate) ? \"CalendarListSelected\" : \"CalendarList\"}>\n                                {getDayOfWeekName(allDaysInMonth[index])} {getDate(allDaysInMonth[index])}: {this.props.getBudgetAmountOnDate(allDaysInMonth[index])}\n                                &nbsp;Transactions: +{this.props.getAddTransactionsOnDate(allDaysInMonth[index]).length} -{this.props.getSubTransactionsOnDate(allDaysInMonth[index]).length}\n                            </div>\n                        )}\n                    </List>\n                </div>\n            </>\n        );\n    }\n}\n\nexport default Calendar;","import { isSunday, isMonday, isTuesday, isWednesday, isThursday, isFriday, isSaturday, getMonth, startOfMonth, endOfMonth, eachDayOfInterval } from 'date-fns';\n\nexport const getDayOfWeekName = (date) => {\n\n    if (isSunday(date)) return 'Sunday';\n    else if (isMonday(date)) return 'Monday';\n    else if (isTuesday(date)) return 'Tuesday';\n    else if (isWednesday(date)) return 'Wednesday';\n    else if (isThursday(date)) return 'Thursday';\n    else if (isFriday(date)) return 'Friday';\n    else if (isSaturday(date)) return 'Saturday';\n    \n    return '';\n}\n\nexport const getMonthName = (date) => {\n    let val = getMonth(date);\n\n    if (val === 0) return 'Janurary';\n    else if (val === 1) return 'Feburary';\n    else if (val === 2) return 'March';\n    else if (val === 3) return 'April';\n    else if (val === 4) return 'May';\n    else if (val === 5) return 'June';\n    else if (val === 6) return 'July';\n    else if (val === 7) return 'August';\n    else if (val === 8) return 'September';\n    else if (val === 9) return 'October';\n    else if (val === 10) return 'November';\n    else if (val === 11) return 'December';\n    \n    return '';\n}\n\nexport const getAllDaysInMonth = (date) => {\n    let startDate = startOfMonth(date);\n    let endDate = endOfMonth(date);\n\n    return eachDayOfInterval({ start: startDate, end: endDate });\n}","import React from 'react'\nimport NumberFormat from 'react-number-format'\nimport Radio from '@material-ui/core/Radio'\nimport Button from '@material-ui/core/Button'\n\nimport './InputFields.css'\n\nclass InputFields extends React.Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            showChangeBudget: false,\n            showAddTransaction: false,\n            currencyValue: null,\n            isAdd: true\n        };\n\n        this.changeBudget = this.changeBudget.bind(this);\n        this.addTransaction = this.addTransaction.bind(this);\n        this.showChangeBudget = this.showChangeBudget.bind(this);\n        this.showAddTransaction = this.showAddTransaction.bind(this);\n        this.closeAll = this.closeAll.bind(this);\n        this.handleOutsideClick = this.handleOutsideClick.bind(this);\n    }\n\n    handleOutsideClick(e) {\n        if (this.node.contains(e.target)) {\n            return;\n        }\n        \n        this.closeAll();\n    }\n\n    changeBudget() {\n        this.props.changeBudget(this.state.currencyValue);\n        this.setState({currencyValue: null});\n        this.closeAll();\n    }\n\n    addTransaction() {\n        this.props.addTransactionOnSelectedDate(this.state.currencyValue, \"Test\", this.state.isAdd);\n        this.setState({currencyValue: null, isAdd: true});\n        this.closeAll();\n    }\n\n    showChangeBudget() {\n        if (!this.state.showChangeBudget)\n            this.setState({currencyValue: null});\n\n        this.setState({showChangeBudget: true});\n        this.setState({showAddTransaction: false});\n\n        document.addEventListener('click', this.handleOutsideClick, false);\n    }\n\n    showAddTransaction() {\n        if (!this.state.showAddTransaction)\n            this.setState({currencyValue: null, isAdd: true});\n\n        this.setState({showAddTransaction: true});\n        this.setState({showChangeBudget: false});\n\n        document.addEventListener('click', this.handleOutsideClick, false);\n    }\n\n    closeAll() {\n        this.setState({currencyValue: null, isAdd: true});\n        this.setState({showChangeBudget: false});\n        this.setState({showAddTransaction: false});\n\n        document.removeEventListener('click', this.handleOutsideClick, false);\n    }\n\n    render() {\n        return (\n            <div ref={node => { this.node = node; }}>\n                <Button style={{marginRight: '10px'}} variant=\"contained\" onClick={this.showChangeBudget}>Change Initial Budget</Button>\n                <Button style={{marginLeft: '10px'}} variant=\"contained\" onClick={this.showAddTransaction}>Add Transaction</Button>\n                <div className=\"InputField\">\n                    {this.state.showChangeBudget ?\n                    <>\n                        <NumberFormat\n                        value={this.state.currencyValue}\n                        thousandSeparator={true}\n                        allowNegative={false}\n                        prefix={'$'}\n                        placeholder=\"$0.00\"\n                        decimalScale={2}\n                        onValueChange={(values) => { this.setState({currencyValue: values.floatValue}); }}\n                        className=\"InputFieldInput\"\n                        />\n                        <br/>\n                        <Button style={{marginTop: '30px', marginRight: '10px'}} variant=\"contained\" color=\"secondary\" onClick={this.closeAll}>Cancel</Button>\n                        <Button style={{marginTop: '30px', marginLeft: '10px'}} variant=\"contained\" color=\"primary\" onClick={this.changeBudget}>Change</Button>\n                    </> : ''}\n                    {this.state.showAddTransaction ?\n                    <>\n                        <NumberFormat\n                        value={this.state.currencyValue}\n                        thousandSeparator={true}\n                        allowNegative={false}\n                        prefix={'$'}\n                        placeholder=\"$0.00\"\n                        decimalScale={2}\n                        onValueChange={(values) => { this.setState({currencyValue: values.floatValue}); }}\n                        className=\"InputFieldInput\"\n                        />\n                        <br/>\n                        <Radio\n                          checked={!this.state.isAdd}\n                          onChange={() => this.setState({isAdd: !this.state.isAdd})}\n                          value={false}\n                        /> Decreasing\n                        <Radio\n                          checked={this.state.isAdd}\n                          onChange={() => this.setState({isAdd: !this.state.isAdd})}\n                          value={true}\n                        /> Increasing\n                        <br/>\n                        <Button style={{marginTop: '30px', marginRight: '10px'}} variant=\"contained\" color=\"secondary\" onClick={this.closeAll}>Cancel</Button>\n                        <Button style={{marginTop: '30px', marginLeft: '10px'}} variant=\"contained\" color=\"primary\" onClick={this.addTransaction}>Add</Button>\n                    </> : ''}\n                </div>\n            </div>\n        )\n    }\n}\n\nexport default InputFields;","import React from 'react'\nimport Button from '@material-ui/core/Button'\n\nimport './Transaction.css'\n\nclass Transaction extends React.Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            onAdd: true,\n            deleteSelected: -1\n        }\n\n        this.enableDeleteConfirm = this.enableDeleteConfirm.bind(this);\n        this.disableDeleteConfirm = this.disableDeleteConfirm.bind(this);\n        this.deleteTransaction = this.deleteTransaction.bind(this);\n        this.handleOutsideClick = this.handleOutsideClick.bind(this);\n    }\n\n    handleOutsideClick(e) {\n        if (this.node.contains(e.target)) {\n            return;\n        }\n        \n        this.disableDeleteConfirm();\n    }\n\n    enableDeleteConfirm(index, add) {\n        this.setState({onAdd: add, deleteSelected: index});\n        document.addEventListener('click', this.handleOutsideClick, false);\n    }\n\n    disableDeleteConfirm() {\n        this.setState({deleteSelected: -1});\n        document.removeEventListener('click', this.handleOutsideClick, false);\n    }\n\n    deleteTransaction(index, isAdd) {\n        this.props.deleteTransactionOnSelectedDate(index, isAdd);\n    }\n\n    render() {\n        return (\n            <div ref={node => { this.node = node; }}>\n                <ul className=\"list\">\n                    {this.props.increases.map((item, index) => {\n                        return <>\n                            <li className=\"plus\">\n                                +${item.value} {item.description}\n                                <button className=\"delete-btn\" onClick={() => this.enableDeleteConfirm(index, true)}>x</button>\n                            </li>\n                            {index === this.state.deleteSelected && this.state.onAdd ? <>\n                                Are you sure you want to delete this transaction?\n                                <br/>\n                                <Button style={{marginTop: '10px', marginRight: '10px'}} variant=\"contained\" color=\"primary\" onClick={this.disableDeleteConfirm}>Cancel</Button>\n                                <Button style={{marginTop: '10px', marginLeft: '10px'}} variant=\"contained\" color=\"secondary\" onClick={() => this.deleteTransaction(index, true)}>Delete</Button>\n                            </> : ''}\n                        </>\n                    })}\n                    {this.props.decreases.map((item, index) => {\n                        return <>\n                            <li className=\"minus\">\n                                -${item.value} {item.description}\n                                <button className=\"delete-btn\" onClick={() => this.enableDeleteConfirm(index, false)}>x</button>\n                            </li>\n                            {index === this.state.deleteSelected && !this.state.onAdd ? <>\n                                Are you sure you want to delete this transaction?\n                                <br/>\n                                <Button style={{marginTop: '10px', marginRight: '10px'}} variant=\"contained\" color=\"primary\" onClick={this.disableDeleteConfirm}>Cancel</Button>\n                                <Button style={{marginTop: '10px', marginLeft: '10px'}} variant=\"contained\" color=\"secondary\" onClick={() => this.deleteTransaction(index, false)}>Delete</Button>\n                            </> : ''}\n                        </>\n                    })}\n                </ul>\n            </div>\n        )\n    }\n}\n\nexport default Transaction;\n","import React from 'react'\nimport Calendar from './Calendar'\nimport InputFields from './InputFields'\nimport Transaction from './Transaction'\nimport { getMonthName } from './DateFunctions'\nimport { getYear, getDate, isBefore, isSameDay } from 'date-fns'\nimport Grid from '@material-ui/core/Grid'\n\nimport './Main.css'\n\nclass Main extends React.Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            budget: 500,\n            selectedDate: Date.now(),\n            dates: [\n                {date: new Date(2020, 3, 19),\n                 increases: [{description: \"Add Money 1\", value: 100}, {description: \"Add Money 2\", value: 200.5}],\n                 decreases: [{description: \"Pay Money 1\", value: 20.3}]\n                },\n                {date: new Date(2020, 4, 11),\n                 increases: [{description: \"Add Money 1\", value: 300.02}],\n                 decreases: [{description: \"Pay Money 1\", value: 500}]\n                }\n            ]\n        };\n\n        this.changeBudget = this.changeBudget.bind(this);\n        this.getBudgetAmountOnDate = this.getBudgetAmountOnDate.bind(this);\n        this.changeSelectedDate = this.changeSelectedDate.bind(this);\n        this.getAddTransactionsOnDate = this.getAddTransactionsOnDate.bind(this);\n        this.getSubTransactionsOnDate = this.getSubTransactionsOnDate.bind(this);\n        this.addTransactionOnSelectedDate = this.addTransactionOnSelectedDate.bind(this);\n        this.deleteTransactionOnSelectedDate = this.deleteTransactionOnSelectedDate.bind(this);\n    }\n\n    addDate = (date) => {\n        this.setState((state, props) => ({\n            dates: [...this.state.dates, date]\n        }));\n    }\n\n    changeBudget(amount) {\n        this.setState({\n            budget: amount\n        });\n    }\n\n    changeSelectedDate(date) {\n        this.setState((state, props) => ({\n            selectedDate: date\n        }));\n    }\n\n    getBudgetAmountOnDate(date) {\n        let amount = this.state.budget;\n\n        var i;\n        for (i = 0; i < this.state.dates.length; i++) {\n            let indexDate = this.state.dates[i];\n\n            if (isBefore(indexDate.date, date) || isSameDay(indexDate.date, date)) {\n                var j;\n                for (j = 0; j < indexDate.increases.length; j++) {\n                    amount += indexDate.increases[j].value;\n                }\n                for (j = 0; j < indexDate.decreases.length; j++) {\n                    amount -= indexDate.decreases[j].value;\n                }\n            }\n        }\n\n        return amount.toFixed(2);\n    }\n\n    getAddTransactionsOnDate(date) {\n        for (var i = 0; i < this.state.dates.length; i++)\n            if (isSameDay(date, this.state.dates[i].date))\n                return this.state.dates[i].increases;\n        \n        return [];\n    }\n\n    getSubTransactionsOnDate(date) {\n        for (var i = 0; i < this.state.dates.length; i++)\n            if (isSameDay(date, this.state.dates[i].date))\n                return this.state.dates[i].decreases;\n        \n        return [];\n    }\n\n    addTransactionOnSelectedDate(amount, description, isAdd) {\n        for (var i = 0; i < this.state.dates.length; i++)\n            if (isSameDay(this.state.selectedDate, this.state.dates[i].date))\n            {\n                var dateEntry;\n                if (isAdd)\n                {\n                    dateEntry = this.state.dates;\n                    dateEntry[i].increases = [...dateEntry[i].increases, {description: description, value: amount}];\n                    this.setState({dates: dateEntry});\n                }\n                else\n                {\n                    dateEntry = this.state.dates;\n                    dateEntry[i].decreases = [...dateEntry[i].decreases, {description: description, value: amount}];\n                    this.setState({dates: dateEntry});\n                }\n                return;\n            }\n\n        var newDate = { date: this.state.selectedDate, increases: [], decreases: [] };\n        if (isAdd)\n            newDate.increases = [{description: description, value: amount}];\n        else\n            newDate.decreases = [{description: description, value: amount}];\n        \n        this.addDate(newDate);\n    }\n\n    deleteTransactionOnSelectedDate(index, isAdd) {\n        var dateIndex;\n        for (var i = 0; i < this.state.dates.length; i++)\n            if (isSameDay(this.state.selectedDate, this.state.dates[i].date)) {\n                dateIndex = i;\n                break;\n            }\n        \n        if (dateIndex == null)\n            return;\n        \n        var dateEntry = this.state.dates;\n        var newArray = [];\n        if (isAdd) {\n            for (i = 0; i < dateEntry[dateIndex].increases.length; i++) {\n                if (i !== index) {\n                    newArray = [...newArray, dateEntry[dateIndex].increases[i]];\n                }\n            }\n            dateEntry[dateIndex].increases = newArray;\n        }\n        else {\n            for (i = 0; i < dateEntry[dateIndex].decreases.length; i++) {\n                if (i !== index) {\n                    newArray = [...newArray, dateEntry[dateIndex].decreases[i]];\n                }\n            }\n            dateEntry[dateIndex].decreases = newArray;\n        }\n\n        this.setState({dates: dateEntry});\n    }\n\n    render() {\n        return (\n            <>\n                <p>\n                    <h1>Current Balance: ${this.getBudgetAmountOnDate(this.state.selectedDate)}</h1>\n                    Selected Date: {getMonthName(this.state.selectedDate)} {getDate(this.state.selectedDate)}, {getYear(this.state.selectedDate)}\n                </p>\n                <InputFields addTransactionOnSelectedDate={this.addTransactionOnSelectedDate} changeBudget={this.changeBudget}/>\n                <Grid container justify=\"center\" spacing={0}>\n                    <Grid item xs>\n                    <Calendar\n                        budget={this.state.budget}\n                        selectedDate={this.state.selectedDate}\n                        changeSelectedDate={this.changeSelectedDate}\n                        getBudgetAmountOnDate={this.getBudgetAmountOnDate}\n                        getAddTransactionsOnDate={this.getAddTransactionsOnDate}\n                        getSubTransactionsOnDate={this.getSubTransactionsOnDate}\n                        dates={this.state.dates}\n                        ref=\"calendar\"\n                    />\n                    </Grid>\n                    <Grid item xs>\n                        <div className=\"transaction\">\n                        <Transaction\n                          increases={this.getAddTransactionsOnDate(this.state.selectedDate)}\n                          decreases={this.getSubTransactionsOnDate(this.state.selectedDate)}\n                          deleteTransactionOnSelectedDate={this.deleteTransactionOnSelectedDate}\n                        />\n                        </div>\n                    </Grid>\n                </Grid>\n            </>\n        );\n    };\n}\n\nexport default Main;","import React from 'react';\nimport './App.css';\nimport Main from './Main';\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <Main/>\n    </div>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}