{"version":3,"sources":["DateFunctions.js","Calendar.js","Budget.js","App.js","serviceWorker.js","index.js"],"names":["getDayOfWeekName","date","isSunday","isMonday","isTuesday","isWednesday","isThursday","isFriday","isSaturday","Calendar","budget","additions","subtractions","i","value","length","this","props","allDaysInMonth","startDate","startOfMonth","endDate","endOfMonth","eachDayOfInterval","start","end","getAllDaysInMonth","selectedDate","onClick","changeSelectedDate","Date","dates","map","day","index","key","getBudgetValueOnDay","increases","decreases","inc","description","dec","height","width","itemSize","itemCount","style","className","isSameDay","getDate","getBudgetAmountOnDate","getAddTransactionsOnDate","getSubTransactionsOnDate","React","Component","Budget","addDate2","setState","state","now","addDate","bind","amount","indexDate","isBefore","j","toFixed","val","getMonth","getMonthName","getYear","ref","App","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","console","message"],"mappings":"wZAEaA,EAAmB,SAACC,GAE7B,OAAIC,YAASD,GAAc,SAClBE,YAASF,GAAc,SACvBG,YAAUH,GAAc,UACxBI,YAAYJ,GAAc,YAC1BK,YAAWL,GAAc,WACzBM,YAASN,GAAc,SACvBO,YAAWP,GAAc,WAE3B,I,wBCmDIQ,G,wLAvDSC,EAAQC,EAAWC,GACnC,IAEIC,EAFAC,EAAQJ,EAGZ,IAAKG,EAAI,EAAGA,EAAIF,EAAUI,OAAQF,IAC9BC,GAASH,EAAUE,GAAGC,MAC1B,IAAKD,EAAI,EAAGA,EAAID,EAAaG,OAAQF,IACjCC,GAASF,EAAaC,GAAGC,MAE7B,OAAOA,I,+BAGD,IAAD,OACDJ,EAASM,KAAKC,MAAMP,OACpBQ,EDYqB,SAACjB,GAC9B,IAAIkB,EAAYC,YAAanB,GACzBoB,EAAUC,YAAWrB,GAEzB,OAAOsB,YAAkB,CAAEC,MAAOL,EAAWM,IAAKJ,IChBzBK,CAAkBV,KAAKC,MAAMU,cAElD,OACI,oCACI,4BAAQC,QAAS,kBAAM,EAAKX,MAAMY,mBAAmB,IAAIC,KAAK,KAAM,EAAG,MAAvE,UACA,4BACKd,KAAKC,MAAMc,MAAMC,KAAI,SAACC,EAAKC,GACxB,OAAO,wBAAIC,IAAKD,GAAT,SACIlC,EAAiBiC,EAAIhC,MADzB,cAC2CS,EAAS,EAAK0B,oBAAoB1B,EAAQuB,EAAII,UAAWJ,EAAIK,WADxG,iBACkIL,EAAII,UAAUL,KAAI,SAACO,GACpJ,OAAO,oCACFA,EAAIC,YADF,KACiBD,EAAIzB,MADrB,WAFR,oBAMamB,EAAIK,UAAUN,KAAI,SAACS,GAC/B,OAAO,oCACFA,EAAID,YADF,KACiBC,EAAI3B,MADrB,WAPR,SAcf,kBAAC,IAAD,CACI4B,OAAQ,IACRC,MAAO,IACPC,SAAU,GACVC,UAAW3B,EAAeH,SAEzB,gBAAGmB,EAAH,EAAGA,MAAOY,EAAV,EAAUA,MAAV,OACG,yBAAKA,MAAOA,EACRlB,QAAS,kBAAM,EAAKX,MAAMY,mBAAmBX,EAAegB,KAC5Da,UAAWC,YAAU9B,EAAegB,GAAQ,EAAKjB,MAAMU,cAAgB,uBAAyB,gBAC/F3B,EAAiBkB,EAAegB,IAHrC,IAG+Ce,YAAQ/B,EAAegB,IAHtE,KAGiF,EAAKjB,MAAMiC,sBAAsBhC,EAAegB,IAHjI,sBAI0B,EAAKjB,MAAMkC,yBAAyBjC,EAAegB,IAAQnB,OAJrF,KAI+F,EAAKE,MAAMmC,yBAAyBlC,EAAegB,IAAQnB,gB,GA/C3JsC,IAAMC,Y,gBCuGdC,E,kDAxGX,WAAYtC,GAAQ,IAAD,8BACf,cAAMA,IA6BVuC,SAAW,SAACvD,GACR,EAAKwD,UAAS,SAACC,EAAOzC,GAAR,MAAmB,CAC7Bc,MAAM,GAAD,mBAAM,EAAK2B,MAAM3B,OAAjB,CAAwB9B,SA9BjC,EAAKyD,MAAQ,CACThD,OAAQ,IACRiB,aAAcG,KAAK6B,MACnB5B,MAAO,CACH,CAAC9B,KAAM,IAAI6B,KAAK,KAAM,EAAG,IACxBO,UAAW,CAAC,CAACG,YAAa,cAAe1B,MAAO,KAAM,CAAC0B,YAAa,cAAe1B,MAAO,QAC1FwB,UAAW,CAAC,CAACE,YAAa,cAAe1B,MAAO,QAEjD,CAACb,KAAM,IAAI6B,KAAK,KAAM,EAAG,IACxBO,UAAW,CAAC,CAACG,YAAa,cAAe1B,MAAO,SAChDwB,UAAW,CAAC,CAACE,YAAa,cAAe1B,MAAO,SAKzD,EAAK8C,QAAU,EAAKA,QAAQC,KAAb,gBACf,EAAKX,sBAAwB,EAAKA,sBAAsBW,KAA3B,gBAC7B,EAAKhC,mBAAqB,EAAKA,mBAAmBgC,KAAxB,gBAC1B,EAAKV,yBAA2B,EAAKA,yBAAyBU,KAA9B,gBAChC,EAAKT,yBAA2B,EAAKA,yBAAyBS,KAA9B,gBArBjB,E,sDAwBR,IAAD,OACN7C,KAAKyC,UAAS,SAACC,EAAOzC,GAAR,MAAmB,CAC7Bc,MAAM,GAAD,mBAAM,EAAK2B,MAAM3B,OAAjB,CAAwB,CAAC9B,KAAM,EAAGoC,UAAW,CAAC,KAAMC,UAAW,CAAC,IAAKxB,MAAO,a,yCAUtEb,GACfe,KAAKyC,UAAS,SAACC,EAAOzC,GAAR,MAAmB,CAC7BU,aAAc1B,Q,4CAIAA,GAClB,IAEIY,EAFAiD,EAAS9C,KAAK0C,MAAMhD,OAGxB,IAAKG,EAAI,EAAGA,EAAIG,KAAK0C,MAAM3B,MAAMhB,OAAQF,IAAK,CAC1C,IAAIkD,EAAY/C,KAAK0C,MAAM3B,MAAMlB,GAEjC,GAAImD,YAASD,EAAU9D,KAAMA,IAAS+C,YAAUe,EAAU9D,KAAMA,GAAO,CACnE,IAAIgE,EACJ,IAAKA,EAAI,EAAGA,EAAIF,EAAU1B,UAAUtB,OAAQkD,IACxCH,GAAUC,EAAU1B,UAAU4B,GAAGnD,MAErC,IAAKmD,EAAI,EAAGA,EAAIF,EAAUzB,UAAUvB,OAAQkD,IACxCH,GAAUC,EAAUzB,UAAU2B,GAAGnD,OAK7C,OAAOgD,EAAOI,QAAQ,K,+CAGDjE,GACrB,IAAK,IAAIY,EAAI,EAAGA,EAAIG,KAAK0C,MAAM3B,MAAMhB,OAAQF,IACzC,GAAImC,YAAU/C,EAAMe,KAAK0C,MAAM3B,MAAMlB,GAAGZ,MACpC,OAAOe,KAAK0C,MAAM3B,MAAMlB,GAAGwB,UAEnC,MAAO,K,+CAGcpC,GACrB,IAAK,IAAIY,EAAI,EAAGA,EAAIG,KAAK0C,MAAM3B,MAAMhB,OAAQF,IACzC,GAAImC,YAAU/C,EAAMe,KAAK0C,MAAM3B,MAAMlB,GAAGZ,MACpC,OAAOe,KAAK0C,MAAM3B,MAAMlB,GAAGyB,UAEnC,MAAO,K,+BAIP,OACI,oCACI,6CFzEY,SAACrC,GACzB,IAAIkE,EAAMC,YAASnE,GAEnB,OAAY,IAARkE,EAAkB,WACL,IAARA,EAAkB,WACV,IAARA,EAAkB,QACV,IAARA,EAAkB,QACV,IAARA,EAAkB,MACV,IAARA,EAAkB,OACV,IAARA,EAAkB,OACV,IAARA,EAAkB,SACV,IAARA,EAAkB,YACV,IAARA,EAAkB,UACV,KAARA,EAAmB,WACX,KAARA,EAAmB,WAErB,GE0DyBE,CAAarD,KAAK0C,MAAM/B,cAD5C,IAC4DsB,YAAQjC,KAAK0C,MAAM/B,cAD/E,KACgG2C,YAAQtD,KAAK0C,MAAM/B,cAC/G,6BAFJ,WAGaX,KAAKkC,sBAAsBlC,KAAK0C,MAAM/B,eAEnD,4BAAQC,QAASZ,KAAK4C,SAAtB,SACA,kBAAC,EAAD,CACIlD,OAAQM,KAAK0C,MAAMhD,OACnBiB,aAAcX,KAAK0C,MAAM/B,aACzBE,mBAAoBb,KAAKa,mBACzBqB,sBAAuBlC,KAAKkC,sBAC5BC,yBAA0BnC,KAAKmC,yBAC/BC,yBAA0BpC,KAAKoC,yBAC/BrB,MAAOf,KAAK0C,MAAM3B,MAClB6B,QAAS5C,KAAKwC,SACde,IAAI,kB,GAlGHlB,IAAMC,WCOZkB,MARf,WACE,OACE,yBAAKzB,UAAU,OACb,kBAAC,EAAD,QCKc0B,QACW,cAA7BC,OAAOC,SAASC,UAEe,UAA7BF,OAAOC,SAASC,UAEhBF,OAAOC,SAASC,SAASC,MACvB,2DCZNC,IAASC,OACP,kBAAC,IAAMC,WAAP,KACE,kBAAC,EAAD,OAEFC,SAASC,eAAe,SDyHpB,kBAAmBC,WACrBA,UAAUC,cAAcC,MACrBC,MAAK,SAAAC,GACJA,EAAaC,gBAEdC,OAAM,SAAAC,GACLC,QAAQD,MAAMA,EAAME,c","file":"static/js/main.6429c82a.chunk.js","sourcesContent":["import { isSunday, isMonday, isTuesday, isWednesday, isThursday, isFriday, isSaturday, getMonth, startOfMonth, endOfMonth, eachDayOfInterval } from 'date-fns';\n\nexport const getDayOfWeekName = (date) => {\n\n    if (isSunday(date)) return 'Sunday';\n    else if (isMonday(date)) return 'Monday';\n    else if (isTuesday(date)) return 'Tuesday';\n    else if (isWednesday(date)) return 'Wednesday';\n    else if (isThursday(date)) return 'Thursday';\n    else if (isFriday(date)) return 'Friday';\n    else if (isSaturday(date)) return 'Saturday';\n    \n    return '';\n}\n\nexport const getMonthName = (date) => {\n    let val = getMonth(date);\n\n    if (val === 0) return 'Janurary';\n    else if (val === 1) return 'Feburary';\n    else if (val === 2) return 'March';\n    else if (val === 3) return 'April';\n    else if (val === 4) return 'May';\n    else if (val === 5) return 'June';\n    else if (val === 6) return 'July';\n    else if (val === 7) return 'August';\n    else if (val === 8) return 'September';\n    else if (val === 9) return 'October';\n    else if (val === 10) return 'November';\n    else if (val === 11) return 'December';\n    \n    return '';\n}\n\nexport const getAllDaysInMonth = (date) => {\n    let startDate = startOfMonth(date);\n    let endDate = endOfMonth(date);\n\n    return eachDayOfInterval({ start: startDate, end: endDate });\n}","import React from 'react'\nimport { getAllDaysInMonth, getDayOfWeekName } from './DateFunctions'\nimport { FixedSizeList as List } from 'react-window'\nimport { getDate, isSameDay } from 'date-fns'\n\nimport './Calendar.css'\n\nclass Calendar extends React.Component {\n    getBudgetValueOnDay(budget, additions, subtractions) {\n        let value = budget;\n\n        var i;\n        for (i = 0; i < additions.length; i++)\n            value += additions[i].value;\n        for (i = 0; i < subtractions.length; i++)\n            value -= subtractions[i].value;\n        \n        return value;\n    }\n\n    render() {\n        let budget = this.props.budget;\n        let allDaysInMonth = getAllDaysInMonth(this.props.selectedDate);\n\n        return (\n            <>\n                <button onClick={() => this.props.changeSelectedDate(new Date(2020, 3, 1))}>Click2</button>\n                <ul>\n                    {this.props.dates.map((day, index) => {\n                        return <li key={index}>\n                            Date: {getDayOfWeekName(day.date)} - Budget: {budget = this.getBudgetValueOnDay(budget, day.increases, day.decreases)} - Additions:[{day.increases.map((inc) => {\n                                return <>\n                                    {inc.description}: {inc.value}&nbsp;\n                                </>;\n                            })}]\n                            - Subtractions[{day.decreases.map((dec) => {\n                                return <>\n                                    {dec.description}: {dec.value}&nbsp;\n                                </>\n                            })}]\n                        </li>\n                    })}\n                </ul>\n                <List\n                    height={500}\n                    width={500}\n                    itemSize={60}\n                    itemCount={allDaysInMonth.length}\n                >\n                    {({ index, style }) => (\n                        <div style={style}\n                            onClick={() => this.props.changeSelectedDate(allDaysInMonth[index])}\n                            className={isSameDay(allDaysInMonth[index], this.props.selectedDate) ? \"CalendarListSelected\" : \"CalendarList\"}>\n                            {getDayOfWeekName(allDaysInMonth[index])} {getDate(allDaysInMonth[index])}: {this.props.getBudgetAmountOnDate(allDaysInMonth[index])}\n                            &nbsp;Transactions: +{this.props.getAddTransactionsOnDate(allDaysInMonth[index]).length} -{this.props.getSubTransactionsOnDate(allDaysInMonth[index]).length}\n                        </div>\n                    )}\n                </List>\n            </>\n        );\n    }\n}\n\nexport default Calendar;","import React from 'react';\nimport Calendar from './Calendar';\nimport { getMonthName } from './DateFunctions'\nimport { getYear, getDate, isBefore, isSameDay } from 'date-fns';\n\nclass Budget extends React.Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            budget: 500,\n            selectedDate: Date.now(),\n            dates: [\n                {date: new Date(2020, 3, 19),\n                 increases: [{description: \"Add Money 1\", value: 100}, {description: \"Add Money 2\", value: 200.5}],\n                 decreases: [{description: \"Pay Money 1\", value: 20.3}]\n                },\n                {date: new Date(2020, 4, 11),\n                 increases: [{description: \"Add Money 1\", value: 300.02}],\n                 decreases: [{description: \"Pay Money 1\", value: 500}]\n                }\n            ]\n        };\n\n        this.addDate = this.addDate.bind(this);\n        this.getBudgetAmountOnDate = this.getBudgetAmountOnDate.bind(this);\n        this.changeSelectedDate = this.changeSelectedDate.bind(this);\n        this.getAddTransactionsOnDate = this.getAddTransactionsOnDate.bind(this);\n        this.getSubTransactionsOnDate = this.getSubTransactionsOnDate.bind(this);\n    }\n\n    addDate() {\n        this.setState((state, props) => ({\n            dates: [...this.state.dates, {date: 3, increases: [100], decreases: [50], value: 1000}],\n        }));\n    }\n\n    addDate2 = (date) => {\n        this.setState((state, props) => ({\n            dates: [...this.state.dates, date]\n        }));\n    }\n\n    changeSelectedDate(date) {\n        this.setState((state, props) => ({\n            selectedDate: date\n        }));\n    }\n\n    getBudgetAmountOnDate(date) {\n        let amount = this.state.budget;\n\n        var i;\n        for (i = 0; i < this.state.dates.length; i++) {\n            let indexDate = this.state.dates[i];\n\n            if (isBefore(indexDate.date, date) || isSameDay(indexDate.date, date)) {\n                var j;\n                for (j = 0; j < indexDate.increases.length; j++) {\n                    amount += indexDate.increases[j].value;\n                }\n                for (j = 0; j < indexDate.decreases.length; j++) {\n                    amount -= indexDate.decreases[j].value;\n                }\n            }\n        }\n\n        return amount.toFixed(2);\n    }\n\n    getAddTransactionsOnDate(date) {\n        for (var i = 0; i < this.state.dates.length; i++)\n            if (isSameDay(date, this.state.dates[i].date))\n                return this.state.dates[i].increases;\n        \n        return [];\n    }\n\n    getSubTransactionsOnDate(date) {\n        for (var i = 0; i < this.state.dates.length; i++)\n            if (isSameDay(date, this.state.dates[i].date))\n                return this.state.dates[i].decreases;\n        \n        return [];\n    }\n\n    render() {\n        return (\n            <>\n                <p>\n                    Selected Date: {getMonthName(this.state.selectedDate)} {getDate(this.state.selectedDate)}, {getYear(this.state.selectedDate)}\n                    <br/>\n                    Budget: {this.getBudgetAmountOnDate(this.state.selectedDate)}\n                </p>\n                <button onClick={this.addDate}>Click</button>\n                <Calendar\n                    budget={this.state.budget}\n                    selectedDate={this.state.selectedDate}\n                    changeSelectedDate={this.changeSelectedDate}\n                    getBudgetAmountOnDate={this.getBudgetAmountOnDate}\n                    getAddTransactionsOnDate={this.getAddTransactionsOnDate}\n                    getSubTransactionsOnDate={this.getSubTransactionsOnDate}\n                    dates={this.state.dates}\n                    addDate={this.addDate2}\n                    ref=\"calendar\"\n                />\n            </>\n        );\n    };\n}\n\nexport default Budget;","import React from 'react';\nimport './App.css';\nimport Budget from './Budget';\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <Budget/>\n    </div>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}