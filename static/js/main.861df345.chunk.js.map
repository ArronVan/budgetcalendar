{"version":3,"sources":["DateFunctions.js","Calendar.js","InputFields.js","Transaction.js","Main.js","App.js","serviceWorker.js","index.js"],"names":["getDayOfWeekName","date","isSunday","isMonday","isTuesday","isWednesday","isThursday","isFriday","isSaturday","Calendar","props","state","month","getMonth","selectedDate","year","getYear","yearInput","toString","allDaysInMonth","startDate","startOfMonth","endDate","endOfMonth","eachDayOfInterval","start","end","getAllDaysInMonth","Date","this","dates","map","day","index","key","getBudgetAmountOnDate","increases","inc","description","value","decreases","dec","FormControl","Select","onChange","event","setState","target","MenuItem","defaultValue","thousandSeparator","allowNegative","decimalScale","isAllowed","values","floatValue","onValueChange","className","height","width","itemSize","itemCount","length","style","onClick","changeSelectedDate","isSameDay","getDate","getAddTransactionsOnDate","getSubTransactionsOnDate","React","Component","InputFields","showChangeBudget","showAddTransaction","currencyValue","isAdd","changeBudget","bind","addTransaction","addTransactionOnSelectedDate","Button","variant","prefix","placeholder","RadioGroup","FormControlLabel","control","Radio","label","Transaction","item","Main","addDate2","budget","now","addDate","amount","i","indexDate","isBefore","j","toFixed","dateEntry","newDate","val","getMonthName","Grid","container","justify","spacing","xs","ref","App","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","console","message"],"mappings":"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","file":"static/js/main.861df345.chunk.js","sourcesContent":["import { isSunday, isMonday, isTuesday, isWednesday, isThursday, isFriday, isSaturday, getMonth, startOfMonth, endOfMonth, eachDayOfInterval } from 'date-fns';\n\nexport const getDayOfWeekName = (date) => {\n\n    if (isSunday(date)) return 'Sunday';\n    else if (isMonday(date)) return 'Monday';\n    else if (isTuesday(date)) return 'Tuesday';\n    else if (isWednesday(date)) return 'Wednesday';\n    else if (isThursday(date)) return 'Thursday';\n    else if (isFriday(date)) return 'Friday';\n    else if (isSaturday(date)) return 'Saturday';\n    \n    return '';\n}\n\nexport const getMonthName = (date) => {\n    let val = getMonth(date);\n\n    if (val === 0) return 'Janurary';\n    else if (val === 1) return 'Feburary';\n    else if (val === 2) return 'March';\n    else if (val === 3) return 'April';\n    else if (val === 4) return 'May';\n    else if (val === 5) return 'June';\n    else if (val === 6) return 'July';\n    else if (val === 7) return 'August';\n    else if (val === 8) return 'September';\n    else if (val === 9) return 'October';\n    else if (val === 10) return 'November';\n    else if (val === 11) return 'December';\n    \n    return '';\n}\n\nexport const getAllDaysInMonth = (date) => {\n    let startDate = startOfMonth(date);\n    let endDate = endOfMonth(date);\n\n    return eachDayOfInterval({ start: startDate, end: endDate });\n}","import React from 'react'\nimport { getAllDaysInMonth, getDayOfWeekName } from './DateFunctions'\nimport { FixedSizeList as List } from 'react-window'\nimport { getDate, getMonth, getYear, isSameDay } from 'date-fns'\nimport FormControl from '@material-ui/core/FormControl'\nimport Select from '@material-ui/core/Select'\nimport MenuItem from '@material-ui/core/MenuItem'\nimport NumberFormat from 'react-number-format'\n\nimport './Calendar.css'\n\nclass Calendar extends React.Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            month: getMonth(this.props.selectedDate),\n            year: getYear(this.props.selectedDate),\n            yearInput: getYear(this.props.selectedDate).toString()\n        }\n    }\n\n    render() {\n        let allDaysInMonth = getAllDaysInMonth(new Date(this.state.year, this.state.month, 1));\n\n        return (\n            <>\n                <ul>\n                    {this.props.dates.map((day, index) => {\n                        return <li key={index}>\n                            Date: {getDayOfWeekName(day.date)} - Budget: {this.props.getBudgetAmountOnDate(day.date)} - Additions:[{day.increases.map((inc) => {\n                                return <>\n                                    {inc.description}: {inc.value}&nbsp;\n                                </>;\n                            })}]\n                            - Subtractions[{day.decreases.map((dec) => {\n                                return <>\n                                    {dec.description}: {dec.value}&nbsp;\n                                </>\n                            })}]\n                        </li>\n                    })}\n                </ul>\n                <FormControl>\n                    <Select value={this.state.month} onChange={(event) => this.setState({month: event.target.value})}>\n                        <MenuItem value={0}>Janurary</MenuItem>\n                        <MenuItem value={1}>Feburary</MenuItem>\n                        <MenuItem value={2}>March</MenuItem>\n                        <MenuItem value={3}>April</MenuItem>\n                        <MenuItem value={4}>May</MenuItem>\n                        <MenuItem value={5}>June</MenuItem>\n                        <MenuItem value={6}>July</MenuItem>\n                        <MenuItem value={7}>August</MenuItem>\n                        <MenuItem value={8}>September</MenuItem>\n                        <MenuItem value={9}>October</MenuItem>\n                        <MenuItem value={10}>November</MenuItem>\n                        <MenuItem value={11}>December</MenuItem>\n                    </Select>\n                </FormControl>\n                <NumberFormat\n                  defaultValue={this.state.year}\n                  thousandSeparator={false}\n                  allowNegative={false}\n                  decimalScale={0}\n                  isAllowed={(values => {return values.floatValue < 10000;})}\n                  onValueChange={(values) => {\n                      this.setState({\n                          year: values.floatValue > 0 ? values.floatValue : 0\n                        });}\n                    }\n                />\n                <div className=\"List\">\n                    <List\n                        height={500}\n                        width={500}\n                        itemSize={60}\n                        itemCount={allDaysInMonth.length}\n                    >\n                        {({ index, style }) => (\n                            <div style={style}\n                                onClick={() => this.props.changeSelectedDate(allDaysInMonth[index])}\n                                className={isSameDay(allDaysInMonth[index], this.props.selectedDate) ? \"CalendarListSelected\" : \"CalendarList\"}>\n                                {getDayOfWeekName(allDaysInMonth[index])} {getDate(allDaysInMonth[index])}: {this.props.getBudgetAmountOnDate(allDaysInMonth[index])}\n                                &nbsp;Transactions: +{this.props.getAddTransactionsOnDate(allDaysInMonth[index]).length} -{this.props.getSubTransactionsOnDate(allDaysInMonth[index]).length}\n                            </div>\n                        )}\n                    </List>\n                </div>\n            </>\n        );\n    }\n}\n\nexport default Calendar;","import React from 'react'\nimport NumberFormat from 'react-number-format'\nimport FormControlLabel from '@material-ui/core/FormControlLabel'\nimport Radio from '@material-ui/core/Radio'\nimport RadioGroup from '@material-ui/core/RadioGroup'\nimport Button from '@material-ui/core/Button'\n\nclass InputFields extends React.Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            showChangeBudget: false,\n            showAddTransaction: false,\n            currencyValue: null,\n            isAdd: true\n        };\n\n        this.changeBudget = this.changeBudget.bind(this);\n        this.addTransaction = this.addTransaction.bind(this);\n        this.showChangeBudget = this.showChangeBudget.bind(this);\n        this.showAddTransaction = this.showAddTransaction.bind(this);\n    }\n\n    changeBudget() {\n        this.props.changeBudget(this.state.currencyValue);\n        this.setState({currencyValue: null});\n    }\n\n    addTransaction() {\n        this.props.addTransactionOnSelectedDate(this.state.currencyValue, \"Test\", this.state.isAdd);\n        this.setState({currencyValue: null, isAdd: true});\n    }\n\n    showChangeBudget() {\n        if (!this.state.showChangeBudget)\n            this.setState({currencyValue: null});\n\n        this.setState({showChangeBudget: true});\n        this.setState({showAddTransaction: false});\n    }\n\n    showAddTransaction() {\n        if (!this.state.showAddTransaction)\n            this.setState({currencyValue: null, isAdd: true});\n\n        this.setState({showAddTransaction: true});\n        this.setState({showChangeBudget: false});\n    }\n\n    render() {\n        return (\n            <>\n                <Button variant=\"contained\" onClick={this.showChangeBudget}>Change Initial Budget</Button>\n                <Button variant=\"contained\" onClick={this.showAddTransaction}>Add Transaction</Button>\n                <br/>\n                {this.state.showChangeBudget ?\n                <>\n                    <NumberFormat\n                      value={this.state.currencyValue}\n                      thousandSeparator={true}\n                      allowNegative={false}\n                      prefix={'$'}\n                      placeholder=\"$0.00\"\n                      decimalScale={2}\n                      onValueChange={(values) => { this.setState({currencyValue: values.floatValue}); }}\n                    />\n                    <button onClick={this.changeBudget}>Change</button>\n                </> : ''}\n                {this.state.showAddTransaction ?\n                <>\n                    <NumberFormat\n                      value={this.state.currencyValue}\n                      thousandSeparator={true}\n                      allowNegative={false}\n                      prefix={'$'}\n                      placeholder=\"$0.00\"\n                      decimalScale={2}\n                      onValueChange={(values) => { this.setState({currencyValue: values.floatValue}); }}\n                    />\n                    <RadioGroup value={this.state.isAdd} onChange={() => this.setState({isAdd: !this.state.isAdd})}>\n                        <FormControlLabel value={false} control={<Radio />} label=\"Decreasing\" />\n                        <FormControlLabel value={true} control={<Radio />} label=\"Increasing\" />\n                    </RadioGroup>\n                    <button onClick={this.addTransaction}>Add</button>\n                </> : ''}\n            </>\n        )\n    }\n}\n\nexport default InputFields;","import React from 'react'\n\nclass Transaction extends React.Component {\n    render() {\n        return (\n            <>\n                {this.props.increases.map((item, index) => {\n                    return <>\n                        +${item.value} {item.description}\n                        <br/>\n                    </>\n                })}\n                <br/>\n                {this.props.decreases.map((item, index) => {\n                    return <>\n                        -${item.value} {item.description}\n                        <br/>\n                    </>\n                })}\n            </>\n        )\n    }\n}\n\nexport default Transaction;\n","import React from 'react'\nimport Calendar from './Calendar'\nimport InputFields from './InputFields'\nimport Transaction from './Transaction'\nimport { getMonthName } from './DateFunctions'\nimport { getYear, getDate, isBefore, isSameDay } from 'date-fns'\nimport Grid from '@material-ui/core/Grid';\n\nclass Main extends React.Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            budget: 500,\n            selectedDate: Date.now(),\n            dates: [\n                {date: new Date(2020, 3, 19),\n                 increases: [{description: \"Add Money 1\", value: 100}, {description: \"Add Money 2\", value: 200.5}],\n                 decreases: [{description: \"Pay Money 1\", value: 20.3}]\n                },\n                {date: new Date(2020, 4, 11),\n                 increases: [{description: \"Add Money 1\", value: 300.02}],\n                 decreases: [{description: \"Pay Money 1\", value: 500}]\n                }\n            ]\n        };\n\n        this.addDate = this.addDate.bind(this);\n        this.changeBudget = this.changeBudget.bind(this);\n        this.getBudgetAmountOnDate = this.getBudgetAmountOnDate.bind(this);\n        this.changeSelectedDate = this.changeSelectedDate.bind(this);\n        this.getAddTransactionsOnDate = this.getAddTransactionsOnDate.bind(this);\n        this.getSubTransactionsOnDate = this.getSubTransactionsOnDate.bind(this);\n        this.addTransactionOnSelectedDate = this.addTransactionOnSelectedDate.bind(this);\n    }\n\n    addDate() {\n        this.setState((state, props) => ({\n            dates: [...this.state.dates, {date: 3, increases: [100], decreases: [50], value: 1000}],\n        }));\n    }\n\n    addDate2 = (date) => {\n        this.setState((state, props) => ({\n            dates: [...this.state.dates, date]\n        }));\n    }\n\n    changeBudget(amount) {\n        this.setState({\n            budget: amount\n        });\n    }\n\n    changeSelectedDate(date) {\n        this.setState((state, props) => ({\n            selectedDate: date\n        }));\n    }\n\n    getBudgetAmountOnDate(date) {\n        let amount = this.state.budget;\n\n        var i;\n        for (i = 0; i < this.state.dates.length; i++) {\n            let indexDate = this.state.dates[i];\n\n            if (isBefore(indexDate.date, date) || isSameDay(indexDate.date, date)) {\n                var j;\n                for (j = 0; j < indexDate.increases.length; j++) {\n                    amount += indexDate.increases[j].value;\n                }\n                for (j = 0; j < indexDate.decreases.length; j++) {\n                    amount -= indexDate.decreases[j].value;\n                }\n            }\n        }\n\n        return amount.toFixed(2);\n    }\n\n    getAddTransactionsOnDate(date) {\n        for (var i = 0; i < this.state.dates.length; i++)\n            if (isSameDay(date, this.state.dates[i].date))\n                return this.state.dates[i].increases;\n        \n        return [];\n    }\n\n    getSubTransactionsOnDate(date) {\n        for (var i = 0; i < this.state.dates.length; i++)\n            if (isSameDay(date, this.state.dates[i].date))\n                return this.state.dates[i].decreases;\n        \n        return [];\n    }\n\n    addTransactionOnSelectedDate(amount, description, isAdd) {\n        for (var i = 0; i < this.state.dates.length; i++)\n            if (isSameDay(this.state.selectedDate, this.state.dates[i].date))\n            {\n                var dateEntry;\n                if (isAdd)\n                {\n                    dateEntry = this.state.dates;\n                    dateEntry[i].increases = [...dateEntry[i].increases, {description: description, value: amount}];\n                    this.setState({dates: dateEntry});\n                }\n                else\n                {\n                    dateEntry = this.state.dates;\n                    dateEntry[i].decreases = [...dateEntry[i].decreases, {description: description, value: amount}];\n                    this.setState({dates: dateEntry});\n                }\n                return;\n            }\n\n        var newDate = { date: this.state.selectedDate, increases: [], decreases: [] };\n        if (isAdd)\n            newDate.increases = [{description: description, value: amount}];\n        else\n            newDate.decreases = [{description: description, value: amount}];\n        \n        this.addDate2(newDate);\n    }\n\n    render() {\n        return (\n            <>\n                <p>\n                    Selected Date: {getMonthName(this.state.selectedDate)} {getDate(this.state.selectedDate)}, {getYear(this.state.selectedDate)}\n                    <br/>\n                    Budget: {this.getBudgetAmountOnDate(this.state.selectedDate)}\n                </p>\n                <button onClick={this.addDate}>Click</button>\n                <InputFields addTransactionOnSelectedDate={this.addTransactionOnSelectedDate} changeBudget={this.changeBudget}/>\n                <Grid container justify=\"center\" spacing={0}>\n                    <Grid item xs>\n                    <Calendar\n                        budget={this.state.budget}\n                        selectedDate={this.state.selectedDate}\n                        changeSelectedDate={this.changeSelectedDate}\n                        getBudgetAmountOnDate={this.getBudgetAmountOnDate}\n                        getAddTransactionsOnDate={this.getAddTransactionsOnDate}\n                        getSubTransactionsOnDate={this.getSubTransactionsOnDate}\n                        dates={this.state.dates}\n                        addDate={this.addDate2}\n                        ref=\"calendar\"\n                    />\n                    </Grid>\n                    <Grid item xs>\n                        <Transaction\n                          increases={this.getAddTransactionsOnDate(this.state.selectedDate)}\n                          decreases={this.getSubTransactionsOnDate(this.state.selectedDate)}\n                        />\n                    </Grid>\n                </Grid>\n            </>\n        );\n    };\n}\n\nexport default Main;","import React from 'react';\nimport './App.css';\nimport Main from './Main';\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <Main/>\n    </div>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}