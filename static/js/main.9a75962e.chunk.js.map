{"version":3,"sources":["Calendar.js","DateFunctions.js","Budget.js","App.js","serviceWorker.js","index.js"],"names":["Calendar","props","console","log","date","startDate","startOfMonth","endDate","endOfMonth","eachDayOfInterval","start","end","getAllDaysInMonth","Date","now","onClick","bind","this","changeSelectedDate","budget","additions","subtractions","i","value","length","dates","map","day","index","key","isSunday","isMonday","isTuesday","isWednesday","isThursday","isFriday","isSaturday","getBudgetValueOnDay","increases","decreases","inc","description","dec","React","Component","Budget","addDate2","setState","state","selectedDate","addDate","getBudgetAmountOnCurrentDate","amount","indexDate","isBefore","isSameDay","j","val","getMonth","getMonthName","getDate","getYear","ref","App","className","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","message"],"mappings":"mYAoDeA,E,kDAhDX,WAAYC,GAAQ,IAAD,6BACf,cAAMA,GAENC,QAAQC,IC2BiB,SAACC,GAC9B,IAAIC,EAAYC,YAAaF,GACzBG,EAAUC,YAAWJ,GAEzB,OAAOK,YAAkB,CAAEC,MAAOL,EAAWM,IAAKJ,ID/BlCK,CAAkBC,KAAKC,QACnC,EAAKC,QAAU,EAAKA,QAAQC,KAAb,gBAJA,E,sDAOfC,KAAKhB,MAAMiB,mBAAmB,IAAIL,KAAK,KAAM,EAAG,M,0CAGhCM,EAAQC,EAAWC,GACnC,IAEIC,EAFAC,EAAQJ,EAGZ,IAAKG,EAAI,EAAGA,EAAIF,EAAUI,OAAQF,IAC9BC,GAASH,EAAUE,GAAGC,MAC1B,IAAKD,EAAI,EAAGA,EAAID,EAAaG,OAAQF,IACjCC,GAASF,EAAaC,GAAGC,MAE7B,OAAOA,I,+BAGD,IAAD,OACDJ,EAASF,KAAKhB,MAAMkB,OACxB,OACI,oCACI,4BAAQJ,QAASE,KAAKF,SAAtB,UACA,4BACCE,KAAKhB,MAAMwB,MAAMC,KAAI,SAACC,EAAKC,GACxB,OAAO,wBAAIC,IAAKD,GAAT,UC/BMxB,EDgCeuB,EAAIvB,KC9B5C0B,YAAS1B,GAAc,SAClB2B,YAAS3B,GAAc,SACvB4B,YAAU5B,GAAc,UACxB6B,YAAY7B,GAAc,YAC1B8B,YAAW9B,GAAc,WACzB+B,YAAS/B,GAAc,SACvBgC,YAAWhC,GAAc,WAE3B,IDqBgB,cAC2Ce,EAAS,EAAKkB,oBAAoBlB,EAAQQ,EAAIW,UAAWX,EAAIY,WADxG,iBACkIZ,EAAIW,UAAUZ,KAAI,SAACc,GACpJ,OAAO,oCACFA,EAAIC,YADF,KACiBD,EAAIjB,MADrB,WAFR,oBAMaI,EAAIY,UAAUb,KAAI,SAACgB,GAC/B,OAAO,oCACFA,EAAID,YADF,KACiBC,EAAInB,MADrB,WAPR,KC/BK,IAACnB,W,GDCVuC,IAAMC,W,gCE+EdC,E,kDA5EX,WAAY5C,GAAQ,IAAD,8BACf,cAAMA,IA2BV6C,SAAW,SAAC1C,GACR,EAAK2C,UAAS,SAACC,EAAO/C,GAAR,MAAmB,CAC7BwB,MAAM,GAAD,mBAAM,EAAKuB,MAAMvB,OAAjB,CAAwBrB,SA5BjC,EAAK4C,MAAQ,CACT7B,OAAQ,OACR8B,aAAcpC,KAAKC,MACnBW,MAAO,CACH,CAACrB,KAAM,IAAIS,KAAK,KAAM,EAAG,IACxByB,UAAW,CAAC,CAACG,YAAa,cAAelB,MAAO,KAAM,CAACkB,YAAa,cAAelB,MAAO,QAC1FgB,UAAW,CAAC,CAACE,YAAa,cAAelB,MAAO,MAEjD,CAACnB,KAAM,IAAIS,KAAK,KAAM,EAAG,GACxByB,UAAW,CAAC,CAACG,YAAa,cAAelB,MAAO,MAChDgB,UAAW,CAAC,CAACE,YAAa,cAAelB,MAAO,SAKzD,EAAK2B,QAAU,EAAKA,QAAQlC,KAAb,gBACf,EAAKmC,6BAA+B,EAAKA,6BAA6BnC,KAAlC,gBACpC,EAAKE,mBAAqB,EAAKA,mBAAmBF,KAAxB,gBAnBX,E,sDAsBR,IAAD,OACNC,KAAK8B,UAAS,SAACC,EAAO/C,GAAR,MAAmB,CAC7BwB,MAAM,GAAD,mBAAM,EAAKuB,MAAMvB,OAAjB,CAAwB,CAACrB,KAAM,EAAGkC,UAAW,CAAC,KAAMC,UAAW,CAAC,IAAKhB,MAAO,a,yCAUtEnB,GACfa,KAAK8B,UAAS,SAACC,EAAO/C,GAAR,MAAmB,CAC7BgD,aAAc7C,Q,qDAKlB,IAEIkB,EAFA8B,EAASnC,KAAK+B,MAAM7B,OAGxB,IAAKG,EAAI,EAAGA,EAAIL,KAAK+B,MAAMvB,MAAMD,OAAQF,IAAK,CAC1C,IAAI+B,EAAYpC,KAAK+B,MAAMvB,MAAMH,GAEjC,GAAIgC,YAASD,EAAUjD,KAAMa,KAAK+B,MAAMC,eAAiBM,YAAUF,EAAUjD,KAAMa,KAAK+B,MAAMC,cAAe,CACzG,IAAIO,EACJ,IAAKA,EAAI,EAAGA,EAAIH,EAAUf,UAAUd,OAAQgC,IACxCJ,GAAUC,EAAUf,UAAUkB,GAAGjC,MAErC,IAAKiC,EAAI,EAAGA,EAAIH,EAAUd,UAAUf,OAAQgC,IACxCJ,GAAUC,EAAUd,UAAUiB,GAAGjC,OAK7C,OAAO6B,I,+BAIP,OACI,oCACI,6CDvDY,SAAChD,GACzB,IAAIqD,EAAMC,YAAStD,GAEnB,OAAY,IAARqD,EAAkB,WACL,IAARA,EAAkB,WACV,IAARA,EAAkB,QACV,IAARA,EAAkB,QACV,IAARA,EAAkB,MACV,IAARA,EAAkB,OACV,IAARA,EAAkB,OACV,IAARA,EAAkB,SACV,IAARA,EAAkB,YACV,IAARA,EAAkB,UACV,KAARA,EAAmB,WACX,KAARA,EAAmB,WAErB,GCwCyBE,CAAa1C,KAAK+B,MAAMC,cAD5C,IAC4DW,YAAQ3C,KAAK+B,MAAMC,cAD/E,KACgGY,YAAQ5C,KAAK+B,MAAMC,cAC/G,6BAFJ,WAGahC,KAAKkC,gCAElB,4BAAQpC,QAASE,KAAKiC,SAAtB,SACA,kBAAC,EAAD,CAAU/B,OAAQF,KAAK+B,MAAM7B,OAAQD,mBAAoBD,KAAKC,mBAAoBO,MAAOR,KAAK+B,MAAMvB,MAAOyB,QAASjC,KAAK6B,SAAUgB,IAAI,kB,GAvElInB,IAAMC,WCOZmB,MARf,WACE,OACE,yBAAKC,UAAU,OACb,kBAAC,EAAD,QCKcC,QACW,cAA7BC,OAAOC,SAASC,UAEe,UAA7BF,OAAOC,SAASC,UAEhBF,OAAOC,SAASC,SAASC,MACvB,2DCZNC,IAASC,OACP,kBAAC,IAAMC,WAAP,KACE,kBAAC,EAAD,OAEFC,SAASC,eAAe,SDyHpB,kBAAmBC,WACrBA,UAAUC,cAAcC,MACrBC,MAAK,SAAAC,GACJA,EAAaC,gBAEdC,OAAM,SAAAC,GACLhF,QAAQgF,MAAMA,EAAMC,c","file":"static/js/main.9a75962e.chunk.js","sourcesContent":["import React from 'react';\nimport { getAllDaysInMonth, getDayOfWeekName } from './DateFunctions'\n\nclass Calendar extends React.Component {\n    constructor(props) {\n        super(props);\n\n        console.log(getAllDaysInMonth(Date.now()));\n        this.onClick = this.onClick.bind(this);\n    }\n    onClick() {\n        this.props.changeSelectedDate(new Date(2020, 3, 1));\n    }\n\n    getBudgetValueOnDay(budget, additions, subtractions) {\n        let value = budget;\n\n        var i;\n        for (i = 0; i < additions.length; i++)\n            value += additions[i].value;\n        for (i = 0; i < subtractions.length; i++)\n            value -= subtractions[i].value;\n        \n        return value;\n    }\n\n    render() {\n        let budget = this.props.budget;\n        return (\n            <>\n                <button onClick={this.onClick}>Click2</button>\n                <ul>\n                {this.props.dates.map((day, index) => {\n                    return <li key={index}>\n                        Date: {getDayOfWeekName(day.date)} - Budget: {budget = this.getBudgetValueOnDay(budget, day.increases, day.decreases)} - Additions:[{day.increases.map((inc) => {\n                            return <>\n                                {inc.description}: {inc.value}&nbsp;\n                            </>;\n                        })}]\n                        - Subtractions[{day.decreases.map((dec) => {\n                            return <>\n                                {dec.description}: {dec.value}&nbsp;\n                            </>\n                        })}]\n                    </li>\n                })}\n                </ul>\n            </>\n        );\n    }\n}\n\nexport default Calendar;","import { isSunday, isMonday, isTuesday, isWednesday, isThursday, isFriday, isSaturday, getMonth, startOfMonth, endOfMonth, eachDayOfInterval } from 'date-fns';\n\nexport const getDayOfWeekName = (date) => {\n\n    if (isSunday(date)) return 'Sunday';\n    else if (isMonday(date)) return 'Monday';\n    else if (isTuesday(date)) return 'Tuesday';\n    else if (isWednesday(date)) return 'Wednesday';\n    else if (isThursday(date)) return 'Thursday';\n    else if (isFriday(date)) return 'Friday';\n    else if (isSaturday(date)) return 'Saturday';\n    \n    return '';\n}\n\nexport const getMonthName = (date) => {\n    let val = getMonth(date);\n\n    if (val === 0) return 'Janurary';\n    else if (val === 1) return 'Feburary';\n    else if (val === 2) return 'March';\n    else if (val === 3) return 'April';\n    else if (val === 4) return 'May';\n    else if (val === 5) return 'June';\n    else if (val === 6) return 'July';\n    else if (val === 7) return 'August';\n    else if (val === 8) return 'September';\n    else if (val === 9) return 'October';\n    else if (val === 10) return 'November';\n    else if (val === 11) return 'December';\n    \n    return '';\n}\n\nexport const getAllDaysInMonth = (date) => {\n    let startDate = startOfMonth(date);\n    let endDate = endOfMonth(date);\n\n    return eachDayOfInterval({ start: startDate, end: endDate });\n}","import React from 'react';\nimport Calendar from './Calendar';\nimport { getMonthName } from './DateFunctions'\nimport { getYear, getDate, isBefore, isSameDay } from 'date-fns';\n\nclass Budget extends React.Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            budget: 500.05,\n            selectedDate: Date.now(),\n            dates: [\n                {date: new Date(2020, 2, 25),\n                 increases: [{description: \"Add Money 1\", value: 100}, {description: \"Add Money 2\", value: 200.5}],\n                 decreases: [{description: \"Pay Money 1\", value: 20}]\n                },\n                {date: new Date(2020, 4, 1),\n                 increases: [{description: \"Add Money 1\", value: 300}],\n                 decreases: [{description: \"Pay Money 1\", value: 500}]\n                }\n            ]\n        };\n\n        this.addDate = this.addDate.bind(this);\n        this.getBudgetAmountOnCurrentDate = this.getBudgetAmountOnCurrentDate.bind(this);\n        this.changeSelectedDate = this.changeSelectedDate.bind(this);\n    }\n\n    addDate() {\n        this.setState((state, props) => ({\n            dates: [...this.state.dates, {date: 3, increases: [100], decreases: [50], value: 1000}],\n        }));\n    }\n\n    addDate2 = (date) => {\n        this.setState((state, props) => ({\n            dates: [...this.state.dates, date]\n        }));\n    }\n\n    changeSelectedDate(date) {\n        this.setState((state, props) => ({\n            selectedDate: date\n        }));\n    }\n\n    getBudgetAmountOnCurrentDate() {\n        let amount = this.state.budget;\n\n        var i;\n        for (i = 0; i < this.state.dates.length; i++) {\n            let indexDate = this.state.dates[i];\n\n            if (isBefore(indexDate.date, this.state.selectedDate) || isSameDay(indexDate.date, this.state.selectedDate)) {\n                var j;\n                for (j = 0; j < indexDate.increases.length; j++) {\n                    amount += indexDate.increases[j].value;\n                }\n                for (j = 0; j < indexDate.decreases.length; j++) {\n                    amount -= indexDate.decreases[j].value;\n                }\n            }\n        }\n\n        return amount;\n    }\n\n    render() {\n        return (\n            <>\n                <p>\n                    Selected Date: {getMonthName(this.state.selectedDate)} {getDate(this.state.selectedDate)}, {getYear(this.state.selectedDate)}\n                    <br/>\n                    Budget: {this.getBudgetAmountOnCurrentDate()}\n                </p>\n                <button onClick={this.addDate}>Click</button>\n                <Calendar budget={this.state.budget} changeSelectedDate={this.changeSelectedDate} dates={this.state.dates} addDate={this.addDate2} ref=\"calendar\" />\n            </>\n        );\n    };\n}\n\nexport default Budget;","import React from 'react';\nimport './App.css';\nimport Budget from './Budget';\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <Budget/>\n    </div>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}